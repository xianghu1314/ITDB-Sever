// <auto-generated />
using System;
using ITDB.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ITDB.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ITDB.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BannerLogo");

                    b.Property<string>("Logo");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentCategoryID");

                    b.Property<int?>("Sort");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ITDB.Models.ConfigureCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Data")
                        .HasMaxLength(255);

                    b.Property<bool>("IfShow");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int>("Sort");

                    b.Property<string>("Url")
                        .HasMaxLength(255);

                    b.HasKey("ID");

                    b.ToTable("ConfigureCategories");
                });

            modelBuilder.Entity("ITDB.Models.ConfigurePosition", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Position")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("ConfigurePositions");
                });

            modelBuilder.Entity("ITDB.Models.ConfigureSlider", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IfShow");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int>("PositionID");

                    b.Property<int>("Sort");

                    b.Property<string>("Url")
                        .HasMaxLength(255);

                    b.HasKey("ID");

                    b.ToTable("ConfigureSliders");
                });

            modelBuilder.Entity("ITDB.Models.DBOrderDetail", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DBPeriodsID");

                    b.Property<int>("DBTicket");

                    b.Property<Guid>("OrderDetailID");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.ToTable("DBOrderDetails");
                });

            modelBuilder.Entity("ITDB.Models.DBPeriods", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("GoodsID");

                    b.Property<decimal>("GoodsPrice");

                    b.Property<bool>("IfOpen");

                    b.Property<int?>("LuckyCode");

                    b.Property<int?>("LuckyUserID");

                    b.Property<int>("NeedNum");

                    b.Property<DateTime?>("OpenTime");

                    b.Property<int>("OverplusNum");

                    b.Property<decimal>("PerPrice");

                    b.Property<int>("PeriodsCode");

                    b.Property<int>("Status");

                    b.Property<DateTime?>("WaitOpenTime");

                    b.HasKey("ID");

                    b.ToTable("DBPeriods");
                });

            modelBuilder.Entity("ITDB.Models.Goods", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryID");

                    b.Property<DateTime>("CreateTime");

                    b.Property<decimal>("GoodPrice");

                    b.Property<string>("GoodsDescribe")
                        .HasMaxLength(255);

                    b.Property<string>("GoodsDetail");

                    b.Property<string>("GoodsLogo")
                        .HasMaxLength(255);

                    b.Property<string>("GoodsLogo2")
                        .HasMaxLength(255);

                    b.Property<string>("GoodsName")
                        .HasMaxLength(50);

                    b.Property<bool>("IfShow");

                    b.HasKey("ID");

                    b.ToTable("Goods");
                });

            modelBuilder.Entity("ITDB.Models.Order", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IfPay");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(20);

                    b.Property<string>("IpCity")
                        .HasMaxLength(50);

                    b.Property<string>("OrderCode")
                        .HasMaxLength(36);

                    b.Property<int>("OrderStatus");

                    b.Property<DateTime?>("PayTime");

                    b.Property<string>("PostAddress")
                        .HasMaxLength(255);

                    b.Property<string>("PostDetailAddress")
                        .HasMaxLength(255);

                    b.Property<string>("PostUserName")
                        .HasMaxLength(20);

                    b.Property<string>("PostUserPhone")
                        .HasMaxLength(11);

                    b.Property<DateTime>("SubmitTime");

                    b.Property<decimal>("TotalPrice");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ITDB.Models.OrderDetail", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DBNum");

                    b.Property<decimal>("DBPerPrice");

                    b.Property<int>("DBPeriodsID");

                    b.Property<decimal>("DBPrice");

                    b.Property<Guid>("OrderID");

                    b.HasKey("ID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("ITDB.Models.RechargeRecords", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ChargeCode")
                        .HasMaxLength(36);

                    b.Property<decimal>("ChargeMoney");

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.ToTable("RechargeRecords");
                });

            modelBuilder.Entity("ITDB.Models.ShippingAddress", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(255);

                    b.Property<string>("DetailAddress")
                        .HasMaxLength(255);

                    b.Property<bool>("IfDefault");

                    b.Property<int>("UserID");

                    b.Property<string>("UserName")
                        .HasMaxLength(50);

                    b.Property<string>("UserPhone")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("ShippingAddress");
                });

            modelBuilder.Entity("ITDB.Models.ShopCart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DBPeriodsID");

                    b.Property<int>("GoodsID");

                    b.Property<int>("Num");

                    b.Property<decimal>("Price");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.ToTable("ShopCarts");
                });

            modelBuilder.Entity("ITDB.Models.ShowOrder", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("DBPeriodsID");

                    b.Property<string>("Title")
                        .HasMaxLength(255);

                    b.Property<int>("UserID");

                    b.Property<string>("content");

                    b.Property<string>("img1")
                        .HasMaxLength(255);

                    b.Property<string>("img2")
                        .HasMaxLength(255);

                    b.Property<string>("img3")
                        .HasMaxLength(255);

                    b.Property<string>("img4")
                        .HasMaxLength(255);

                    b.Property<string>("img5")
                        .HasMaxLength(255);

                    b.Property<string>("img6")
                        .HasMaxLength(255);

                    b.HasKey("ID");

                    b.ToTable("ShowOrders");
                });

            modelBuilder.Entity("ITDB.Models.TodoItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsComplete");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TodoItems");
                });

            modelBuilder.Entity("ITDB.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Status");

                    b.Property<decimal>("UserBalance");

                    b.Property<string>("UserLogo")
                        .HasMaxLength(255);

                    b.Property<string>("UserName")
                        .HasMaxLength(50);

                    b.Property<string>("UserPhone")
                        .HasMaxLength(11);

                    b.Property<string>("UserPwd")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ITDB.Models.UserOtherLogin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(36);

                    b.Property<string>("Key1")
                        .HasMaxLength(36);

                    b.Property<string>("Key2")
                        .HasMaxLength(36);

                    b.Property<int>("UserID");

                    b.Property<string>("icon")
                        .HasMaxLength(255);

                    b.Property<string>("nickname")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("UserOtherLogins");
                });
#pragma warning restore 612, 618
        }
    }
}
